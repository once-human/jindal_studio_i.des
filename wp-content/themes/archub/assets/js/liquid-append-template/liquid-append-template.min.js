!function($){"use strict";const t="liquidAppendTemplate";let e={type:"prepend",getCssFromTarget:[],getCssFromTargetChild:!1,applyCssTo:null};class s{constructor(s,i){this._defaults=e,this._name=t,this.options={...e,...i},this.DOM={},this.DOM.element=s,this.DOM.$element=$(s),this.DOM.$targetElements=$(this.options.targetElements).not(".lqd-append-template-done"),this.init()}init(){this.cloneIntoTargetElements()}cloneIntoTargetElements(){this.DOM.$targetElements.each(((t,e)=>{const s=$(e),i=this.DOM.element.content.firstElementChild.cloneNode(!0),n=this.options.getCssFromTargetChild?s.find(this.options.getCssFromTargetChild):s;if(this.options.getCssFromTarget.length>0){const t=this.options.applyCssTo?$(this.options.applyCssTo,i):s;this.options.getCssFromTarget.forEach((e=>{t.css(e,n.css(e))}))}s[this.options.type](i),s.addClass("lqd-append-template-done"),this.initPlugins(s)}))}initPlugins(t){$("[data-inview]",t).liquidInView()}}$.fn[t]=function(e){return this.each((function(){const i={...$(this).data("append-options"),...e};$.data(this,"plugin_"+t,new s(this,i))}))}}(jQuery),jQuery(document).ready((function($){$("[data-lqd-append-template]").liquidAppendTemplate()}));